// Generated by CoffeeScript 1.9.3
(function() {
  var ages, k, v;
  ages = {};
  ages["jim"] = 12;
  ages["john"] = 7;
  for (k in ages) {
    v = ages[k];
    console.log(k + " is " + v);
  }
}).call(this);


request.get { uri:'path/to/api.json', json: true }, (err, r, body) -> results = body
// Generated by CoffeeScript 1.9.3
(function() {
  request.get({
    uri: 'path/to/api.json',
    json: true
  }, function(err, r, body) {
    var results;
    return results = body;
  });
}).call(this);

[1..10].map (i) -> i*2

// Generated by CoffeeScript 1.9.3
//["a.json", "b.json", "c.json"].map (url) -> 
//	request.get { uri: url, json: true }, (err, r, body) -> results = body
(function() {
  ["a.json", "b.json", "c.json"].map(function(url) {
    return request.get({
      uri: url,
      json: true
    }, function(err, r, body) {
      var results;
      return results = body;
    });
  });
}).call(this);

// Generated by CoffeeScript 1.9.3
(function() {
  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function(i) {
    return i * 2;
  });
}).call(this);




# Assignment:
number   = 42
opposite = true
# Conditions:
number = -42 if opposite

# Functions:
square = (x) -> x * x

# Arrays:
list = [1, 2, 3, 4, 5]

# Objects:
math =
  root:   Math.sqrt
  square: square
  cube:   (x) -> x * square x

# Splats:
race = (winner, runners...) ->
  print winner, runners

# Existence:
alert "I knew it!" if elvis?

# Array comprehensions:
cubes = (math.cube num for num in list)

